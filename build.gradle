ext {
	mainClass = 'org.diylc.app.DIYLCStarter'
	minMemory = '512M'
	maxMemory = '2048M'
	scriptRun = 'true'
}

allprojects {
	apply plugin: 'groovy'
	apply plugin: 'maven-publish'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	group = 'org.diylc'
	version = '4.0.0-SNAPSHOT'

	sourceSets.main.java.srcDirs = []
	sourceSets.main.groovy.srcDirs += ["src/main/java"]
/*
	compileJava {
		options.debug = true
		options.debugOptions.debugLevel = "source,lines,vars"
	}
	
	compileTestJava {	
		options.debug = true
		options.debugOptions.debugLevel = "source,lines,vars"
 	}
*/ 
/*
	compileGroovy {
		options.debug = true
		options.debugOptions.debugLevel = "source,lines,vars"
	}

	compileTestGroovy {
		options.debug = true
		options.debugOptions.debugLevel = "source,lines,vars"
	}
*/
	dependencies {
		compile 'org.codehaus.groovy:groovy-all:2.4.7'
		testCompile(group: 'junit', name: 'junit', version: '4.+')
		testCompile(group: 'org.spockframework', name: 'spock-core', version: '1.0-groovy-2.4')
	}

	task sourcesJar(type: Jar, dependsOn:classes) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}

	task javadocJar(type: Jar, dependsOn:javadoc) {
		classifier = 'javadoc'
		from javadoc.destinationDir
	}

	artifacts {
		archives sourcesJar
		archives javadocJar
	}
    
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://bits.netbeans.org/maven2/" }
    }
}

if (JavaVersion.current().isJava8Compatible()) {
	allprojects {
		tasks.withType(Javadoc) {
			options.addStringOption('Xdoclint:none', '-quiet')
		}
	}
}

project(':diylc-component-api') {
	dependencies { 
		compile project(':diylc-core') 
	}
}

project(':diylc-component-library') {
	dependencies { 
		compile project(':diylc-component-api') 
	}
}

project(':diylc-serialization') {
	dependencies { 
		compile project(':diylc-component-api') 
	}
}

project(':diylc-app') {
	dependencies {
		compile project(':diylc-component-library')
	}
}